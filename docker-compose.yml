services:
  mariadb:
    image: mariadb:11.6
    container_name: auth_berry_mariadb
    restart: unless-stopped
    environment:
      MARIADB_DATABASE: auth_berry
      MARIADB_USER: auth-berry-user
      MARIADB_PASSWORD_FILE: /secrets/mariadb_user
      MARIADB_ROOT_PASSWORD_FILE: /secrets/mariadb_root
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./secrets:/secrets:ro
    devices:
      - /dev/tpmrm0:/dev/tpmrm0
      - /dev/tpm0:/dev/tpm0
    networks:
      - auth_berry_network
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.5'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  flask:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: auth_berry_flask
    restart: unless-stopped
    environment:
      FLASK_ENV: production
      APP_SECRET_KEY_FILE: /secrets/app_secret
      JWT_SECRET_FILE: /secrets/jwt_secret
      ENCRYPTION_KEY_FILE: /secrets/encryption_key
      DB_TYPE: mariadb
      DB_CONNECTOR: pymysql
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_USER: auth-berry-user
      DB_PASSWORD_FILE: /secrets/mariadb_user
      DB_NAME: auth_berry
      FILE_UPLOAD_PATH: /app/file_uploads
      GUNICORN_WORKERS: 1
      GUNICORN_WORKER_CLASS: gevent
      GUNICORN_WORKER_CONNECTIONS: 2500
    volumes:
      - file_uploads:/app/file_uploads
      - ./secrets:/secrets:ro
    devices:
      - /dev/tpmrm0:/dev/tpmrm0
      - /dev/tpm0:/dev/tpm0
    ports:
      - "${FLASK_PORT:-1337}:1337"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - auth_berry_network
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: '1.5'
        reservations:
          memory: 256M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  vue:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: auth_berry_vue
    restart: unless-stopped
    ports:
      - "${VUE_PORT:-8080}:3000"
    depends_on:
      - flask
    networks:
      - auth_berry_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  auth_berry_network:
    driver: bridge

volumes:
  mariadb_data: {}
  file_uploads: {}
